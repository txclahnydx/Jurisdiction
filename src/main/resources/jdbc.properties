#============数据源配置==============
# 指定连接数据库的驱动
jdbc.driver=com.mysql.jdbc.Driver
# 指定连接数据库的URL
jdbc.url=jdbc:mysql://127.0.0.1:3306/jurisdiction?characterEncoding=utf8&useUnicode=true&useSSL=false&serverTimezone=UTC
# 指定连接数据库的用户名
jdbc.username=root
# 指定连接数据库的密码
jdbc.password=root
#==============通用配置================
#初始化连接
jdbc.initialSize=1   
#最小空闲连接
jdbc.minIdle=10
#连接池的最大数据库连接数，设为0表示无限制
jdbc.maxActive=20
#配置获取连接等待超时的时间
jdbc.maxWait=60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
jdbc.timeBetweenEvictionRunsMillis=60000
#配置一个连接在池中最小生存的时间，单位是毫秒
jdbc.minEvictableIdleTimeMillis=300000
#验证连接是否有效的SQL文
jdbc.validationQuery=SELECT 'x'
#空闲时是否进行验证，检查对象是否有效，默认为false 
jdbc.testWhileIdle=true
#取得对象时是否进行验证，检查对象是否有效，默认为false  
jdbc.testOnBorrow=false
#返回对象时是否进行验证，检查对象是否有效，默认为false  
jdbc.testOnReturn=false
#打开PSCache，并且指定每个连接上PSCache的大小
# 如果用Oracle，则把poolPreparedStatements配置为true，MySQL可以配置为false。 
jdbc.poolPreparedStatements=false
jdbc.maxOpenPreparedStatements=20
#是否自动回收超时连接
jdbc.removeAbandoned=true
#设置被遗弃的连接的超时的时间（以秒数为单位），即当一个连接被遗弃的时间超过设置的时间，则它会自动转换成可利用的连接。默认的超时时间是300秒。
jdbc.removeAbandonedTimeout=1800
#是否在自动回收超时连接的时候打印连接的超时错误
jdbc.logAbandoned=true
#每隔10秒将监控日志输出到日志文件中，单位是毫秒。
jdbc.timeBetweenLogStatsMillis=10000